# -*- coding: utf-8 -*-
# ---
# jupyter:
#   jupytext:
#     formats: ipynb,py:light
#     text_representation:
#       extension: .py
#       format_name: light
#       format_version: '1.4'
#       jupytext_version: 1.2.4
#   kernelspec:
#     display_name: Python 3
#     language: python
#     name: python3
# ---

# # О структуре и файлах

# Здесь собрано все, чтобы была понятна структура и наполнение проекта

# ## Структура проекта

# В данной папке (см. ниже) живет проект "Обучение Спарку", скорее всего - только первый курс.
#
# В данной папке заведен репозиторий git, в который попадают "исходные материалы" данного курса (см. пояснения ниже)

# !pwd

# ## Исходные материалы

# Исходными материалами для обучения являются
#
# * файлы на питоне: все юпитеры связаны с питон файлами (в лайт формате). Редактируем любой из них, храним питоны
# * картинки: картинки тоже важны, пока их нет, потом придумаем структуру хранения
# * стили: постепенно будут появлятся стили, их тоже будем хранить
#
# См. ниже список файлов

# + {"language": "bash"}
# find . -not -path "*checkpoint*"  -not -path "*test_all*" -name "*.py" -print | cut -d '.' -f 2 > /tmp/pyfiles
# find . -not -path "*checkpoint*"  -not -path "*test_all*" -name "*.ipynb" -print | cut -d '.' -f 2 > /tmp/jfiles
# echo "Слева - питоны, справа - юпитеры"
# echo "================================"
# diff -y /tmp/pyfiles /tmp/jfiles --suppress-common-lines
# exit 0 # иначе юпитер ругается - дуемат, ошибка
# -

# ## GitHub

# Генеральная идея - пока использовать гитхаб для синхронизации распределенной работы
#
# Для этого
#
# * на гитхабе создан репозиторий
# * на локальных машинах (ноутбук и работа) этот репозиторий сделан remote
# * по окончании работы тем или иным способом добиваемся, чтобы исходники попадали в гитхаб
#
# Было бы неплохо автоматом (или как-то) формировать read.me в директориях в части их смысла (хотя?). Пока попробую руками их насоздовать - вроде как их гитхаб автоматом показывает в папках... 

# **Как настраивал работу с гитхабом**
#
# инструкции брал отсюда
#
# * общая по гитхабу (толковая кстати): https://kbroman.org/github_tutorial/pages/init.html
# * настройка гита на работу с ключами: https://stackoverflow.com/questions/4565700/how-to-specify-the-private-ssh-key-to-use-when-executing-shell-command-on-git (второй ответ)
#
# 1. сделал rsa ключ, положил его в домашнюю папку (пока он один - id_rsa и id_rsa.pub: оба для гитхаба)
# 2. домашняя папка - потому что иначе не получается дать прайват ключу нужные права (0600 - дал такие права)
# 3. сделал репозиторий на гитхабе
# 4. сделал ~/.ssh/config - см. ниже
# 5. дал ему права 0600
# 6. выполнил
#
# `git remote add origin git@gitserv:korolmi/spark_edu.git`
#
# 7. потом
#
# `git push -u origin master`
#
# все получилось...
#
# Затейливо.

# !cat /home/mk/.ssh/config
